@use 'theme';

$color: var(--amino-styled-react-select-color);

.iconWrapper {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  color: theme.$amino-gray-700;
  margin-left: 0px;
  margin-right: 0px;
  height: 24px;
  width: 24px;
}

.styledFloatedLabel {
  position: absolute;
  transition: theme.$amino-transition;
  font-size: theme.$amino-font-size-base;
  line-height: theme.$amino-font-size-base;
  transform-origin: left top;
  left: 12px;
  .hasIcon & {
    left: 44px;
  }
  top: calc(50% - theme.$amino-font-size-base / 2);

  .hasLabel & {
    & + div {
      align-self: flex-end;
    }
  }
  .hasValue &,
  .isFocused & {
    top: 11px;
    transform: scale(0.8);
  }

  // Size modify

  // Hide floating label for sm and md sizes
  .sm,
  .md {
    .styledFloatedLabel {
      display: none;
    }
  }

  // lg
  .lg.hasValue &,
  .lg.isFocused & {
    top: 9px;
  }

  // xl
  .xl.hasLabel & {
    & + div {
      margin-bottom: 3px;
    }
  }
  .xl.hasValue &,
  .xl.isFocused & {
    top: 10px;
  }
}

.isDisabled {
  opacity: theme.$amino-opacity-disabled;
}

.styledSelectWrapper {
  .reactSelectControl + div {
    z-index: 20;
  }

  &.hasError .reactSelectControl {
    box-shadow: theme.$amino-shadow-select-error !important;
  }
}

.strongLabel {
  font-weight: 600;
}

.checkboxOptionIconWrapper {
  display: flex;
  align-items: center;
  color: $color;
  svg {
    margin-right: 4px;
    color: theme.$amino-gray-1000;
  }
}

.styledSelectOptionWrapper {
  &:not(.isDisabled) {
    &.isFocused,
    &:hover {
      /* The styles are inlined on this component from emotion, so we must override */
      background-color: theme.$amino-gray-100 !important;
    }
  }
}

.selectedSingleOptionWrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
