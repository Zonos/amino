@use 'theme';

$cellMinWidth: var(--amino-cell-min-width);

.tableContainer {
  width: 100%;
}

.tableStyled {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  font-size: theme.$amino-font-size-base;

  &.noHeaders {
    thead {
      display: none;
      max-height: 0;
    }
  }

  &.bordered {
    th {
      border: none;
    }
    tr:first-child {
      td {
        border-top: theme.$amino-border-subtle;
      }
      td:first-child {
        border-top-left-radius: 12px;
      }
    }
    tr:first-child td:last-child {
      border-top-right-radius: 12px;
    }
    tr:last-child td:first-child {
      border-bottom-left-radius: 12px;
    }
    tr:last-child td:last-child {
      border-bottom-right-radius: 12px;
    }
    td:first-child {
      border-left: theme.$amino-border-subtle;
    }
    td:last-child {
      border-right: theme.$amino-border-subtle;
    }
  }

  > thead {
    text-transform: none;

    > tr {
      border-bottom: theme.$amino-border-subtle;
      height: 48px;

      > th {
        position: sticky;
        top: 0px;
        background-color: theme.$amino-gray-0;
        padding: 12px;
        white-space: nowrap;
        border-bottom: theme.$amino-border-subtle;
        z-index: 1;

        &.noPadding {
          padding: 0;
        }
      }
    }
  }

  > tbody {
    > tr {
      height: 48px;

      &.withHover:hover {
        background-color: theme.$amino-hover-color;
      }

      &.clickable {
        cursor: pointer;
      }

      &:not(:hover) {
        :global(.row-hover-show) {
          visibility: collapse;
        }
      }

      > td {
        border-bottom: theme.$amino-border-subtle;
        padding: 0;

        > :first-child {
          display: block;
          height: 100%;
          width: 100%;
          padding: 12px;
          white-space: nowrap;

          &:global(.tooltip-wrapper) {
            padding: 0;

            > a {
              display: inline-flex;
              padding: 12px;
              width: 100%;
              height: 100%;
            }
          }

          &.noPadding {
            padding: 0;
          }

          &.allowTextWrap {
            white-space: normal;
          }

          &.loading {
            text-align: center;
          }

          &.skeletonCellWrapper {
            display: flex;
          }

          &:not(:hover) {
            :global(.cell-hover-show) {
              visibility: collapse;
            }
          }
        }

        &.shouldTruncate {
          max-width: $cellMinWidth;
          min-width: $cellMinWidth;
          > :first-child {
            // Truncating the first child will cover most cases.
            // For custom rendered cells, these 3 properties may need to be apply to deeply nested children on a per need basis.
            overflow: hidden;
            text-overflow: ellipsis;
          }
        }
      }
    }
  }

  &.collapsible {
    tr > td:last-child {
      width: 40px;
      > div {
        padding: 0;
      }
    }
    &.bordered {
      tr:nth-last-child(2).collapsed td:first-child {
        border-bottom-left-radius: 12px;
      }
      tr:nth-last-child(2).collapsed td:last-child {
        border-bottom-right-radius: 12px;
      }
    }
    > tbody {
      * {
        transition: theme.$amino-transition;
      }
      > tr {
        height: unset;

        &:not(.collapsed) {
          td {
            border-bottom: theme.$amino-border-subtle;
          }
        }
        &.collapsed.hasContent {
          & + tr > td {
            border: 0;
          }
          + tr > td > :first-child {
            padding: 0;
          }
        }
      }
    }
  }
}

.styledCheckbox {
  padding: 12px;
  display: inline-flex;
}
